import pandas as pd  
import numpy as np  
import matplotlib.pyplot as plt 
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
%matplotlib inline
from sklearn.metrics import mean_squared_error
data = pd.read_csv(r'C:\Users\Bhagyashri\jupy\Scripts\train.csv')
data['PoolQC'],c=pd.factorize(data['PoolQC'].fillna(0))
data['FireplaceQu'],c=pd.factorize(data['FireplaceQu'].fillna(0))
data['Condition1'],c=pd.factorize(data['Condition1'].fillna(0))
data['HouseStyle'],c=pd.factorize(data['HouseStyle'].fillna(0))
data['BldgType'],c=pd.factorize(data['BldgType'].fillna(0))
data['RoofStyle'],c=pd.factorize(data['RoofStyle'].fillna(0))
data['PavedDrive'],c=pd.factorize(data['PavedDrive'].fillna(0))
data['ExterQual'],c=pd.factorize(data['ExterQual'].fillna(0))
data['Heating'],c=pd.factorize(data['Heating'].fillna(0))
data['Condition2'],c=pd.factorize(data['Condition2'].fillna(0))
data['GarageCond'],c=pd.factorize(data['GarageCond'].fillna(0))
data['LandContour'],c=pd.factorize(data['LandContour'].fillna(0))
data['Utilities'],c=pd.factorize(data['Utilities'].fillna(0))
data['LotConfig'],c=pd.factorize(data['LotConfig'].fillna(0))
data['GarageQual'],c=pd.factorize(data['GarageQual'].fillna(0))
data['KitchenQual'],c=pd.factorize(data['KitchenQual'].fillna(0))
data['HeatingQC'],c=pd.factorize(data['HeatingQC'].fillna(0))
data['BsmtCond'],c=pd.factorize(data['BsmtCond'].fillna(0))
data['CentralAir'],c=pd.factorize(data['CentralAir'].fillna(0))
data['BsmtQual'],c=pd.factorize(data['BsmtQual'].fillna(0))
data['SaleType'],c=pd.factorize(data['SaleType'].fillna(0))
data['ExterCond'],c=pd.factorize(data['ExterCond'].fillna(0))
data['Alley'],c=pd.factorize(data['Alley'].fillna(0))
data['Street'],c=pd.factorize(data['Street'].fillna(0))
data['LotFrontage']=data['LotFrontage'].fillna(0)
data['MasVnrArea']=data['MasVnrArea'].fillna(0)
data['GarageYrBlt']=data['GarageYrBlt'].fillna(0)
data['LotShape'],c=pd.factorize(data['LotShape'].fillna(0))
data['MSZoning'],c=pd.factorize(data['MSZoning'].fillna(0))
data['LandSlope'],c=pd.factorize(data['LandSlope'].fillna(0))
def encode(num):
    return 1 if num=='Partial' or 'Norm' or 'CompShg' else 0
data['SaleCondition'] = data['SaleCondition'].apply(encode)
data['Condition2'] =data['Condition2'].apply(encode)
data['RoofMatl'] =data['RoofMatl'].apply(encode)
new_data=np.array(data[['MSSubClass','MSZoning','SaleType','PavedDrive','ExterQual','RoofStyle','HouseStyle','BldgType','Condition2','Condition1','LotConfig','Utilities','LandContour','Street','LotShape', 'LotFrontage', 'LotArea', 'Alley', 'LandSlope', 'Condition2', 'OverallQual', 'OverallCond', 'YearBuilt', 'YearRemodAdd', 'RoofMatl', 'MasVnrArea', 'ExterCond', 'BsmtQual', 'BsmtCond', 'BsmtFinSF1', 'BsmtFinSF2', 'BsmtUnfSF', 'TotalBsmtSF', 'HeatingQC', 'CentralAir', '1stFlrSF', '2ndFlrSF', 'LowQualFinSF', 'GrLivArea', 'BsmtFullBath', 'BsmtHalfBath', 'FullBath', 'HalfBath', 'BedroomAbvGr', 'KitchenAbvGr', 'KitchenQual', 'TotRmsAbvGrd', 'Fireplaces', 'FireplaceQu', 'GarageYrBlt', 'GarageCars', 'GarageArea', 'GarageQual', 'GarageCond', 'WoodDeckSF', 'OpenPorchSF', 'EnclosedPorch', '3SsnPorch', 'ScreenPorch', 'PoolArea', 'PoolQC', 'MiscVal', 'MoSold', 'YrSold', 'SaleCondition']])
l=np.array(np.log(data['SalePrice']))
x_train,x_val,y_train,y_val=train_test_split(new_data,l,random_state=1,test_size=0.3)
model =LinearRegression()
model.fit(x_train,y_train)
y_pred =model.predict(x_val)
plt.plot(np.log(y_pred),np.log(y_val),'or')
plt.show()
print(new_data.shape)
print ("R^2 is: \n", model.score(x_val, y_val))
print ('RMSE is: \n', mean_squared_error(y_val, y_pred)) 
